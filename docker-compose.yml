
services:
  # --- Application Backend (FastAPI) ---
  app:
    build: .
    # Ensures the 'app' service does not start until the 'db' service reports a healthy status.
    depends_on:
      db:
        condition: service_healthy
    # 'expose' opens the port only to other services within the Docker network.
    expose:
      - "8000"
    # Volumes for live development and data persistence.
    volumes:
      - ./app:/code/app          # Syncs the source code for development.
      - ./docs:/docs_source       # Directory where Markdown files are stored.
      - docs_build:/docs_build    # Volume for the static site generated by MkDocs.
    # Loads environment variables from the .env file.
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - SECRET_KEY=${SECRET_KEY}
    restart: unless-stopped

  # --- Database (PostgreSQL) ---
  db:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/ # Persists the database data.
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    # Healthcheck: A mechanism for Docker to verify if the container is running correctly.
    healthcheck:
      # pg_isready is a PostgreSQL utility that checks if the DB server is ready to accept connections.
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # --- Reverse Proxy (Nginx) ---
  nginx:
    image: nginx:1.21-alpine
    # Maps port 8080 on the host to port 80 in the container.
    ports:
      - "8080:80"
    volumes:
      # Mounts the Nginx configuration and the generated static site.
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - docs_build:/var/www/html
    depends_on:
      - app
    restart: unless-stopped

# Named volumes for data persistence.
volumes:
  docs_build:
  postgres_data: