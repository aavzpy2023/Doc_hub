services:
  # --- Backend of the app (FastAPI) ---
  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: docuhub_app
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend/app:/code/app
      - ./backend/docs:/docs_source
      - docs_build:/docs_build
    env_file: .env
    expose:
      - "8000"
    networks:
      - app-network
    restart: unless-stopped

  # --- (PostgreSQL) ---
  db:
    image: postgres:14-alpine
    container_name: docuhub_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file: .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGROS_USER} -d ${POSTGROS_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    restart: unless-stopped

  # --- Reverse Proxy (Nginx) ---
  nginx:
    image: nginx:1.21-alpine
    container_name: docuhub_nginx
    ports:
      - "8080:80"
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/conf.d/default.conf
      - docs_build:/var/www/html
    depends_on:
      - app
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  docs_build:
  postgres_data: