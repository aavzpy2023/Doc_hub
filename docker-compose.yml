# /docker-compose.yml (VERSIÓN FINAL Y ROBUSTA)
services:
  app:
    build: .
    # CAMBIO CLAVE: Ahora depende de que el servicio 'db' esté 'saludable'
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "8000"
    volumes:
      - ./app:/code/app
      - docs_source:/docs_source
      - docs_build:/docs_build
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - SECRET_KEY=${SECRET_KEY}

  db:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    # --- NUEVA SECCIÓN: HEALTHCHECK ---
    healthcheck:
      # Comando que Docker ejecutará para comprobar la salud del servicio.
      # pg_isready es una utilidad de PostgreSQL que devuelve 0 si el servidor está listo.
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s    # Comprobar cada 5 segundos
      timeout: 5s     # Esperar 5 segundos por una respuesta
      retries: 5      # Intentarlo 5 veces antes de marcarlo como 'unhealthy'

  nginx:
    image: nginx:1.21-alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - docs_build:/var/www/html
    depends_on:
      - app

volumes:
  docs_source:
  docs_build:
  postgres_data: